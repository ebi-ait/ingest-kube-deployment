apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    app.gitlab.com/app: {{ .Values.gitlab_app }}
    app.gitlab.com/env: {{ .Values.gitlab_env }}
  labels:
    role: ingestion
  name: ingest-staging-manager
  namespace: {{ .Values.environment }}-environment
spec:
  selector:
    matchLabels:
      app: ingest-staging-manager
  replicas: {{ .Values.replicas }}
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ingest-staging-manager
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
        app.gitlab.com/app: {{ .Values.gitlab_app }}
        app.gitlab.com/env: {{ .Values.gitlab_env }}
    spec:
      volumes:
        - name: secret-volume
          secret:
            secretName: api-keys
            items:
              - key: ingest-service-account-auth-info
                path: ingest-svc-account.json
      containers:
      - env:
        - name: INGEST_API
          value: http://$(INGEST_CORE_SERVICE_SERVICE_HOST):$(INGEST_CORE_SERVICE_SERVICE_PORT)
        - name: RABBIT_URL
          value: amqp://${RABBIT_SERVICE_SERVICE_HOST}:${RABBIT_SERVICE_SERVICE_PORT_SERVICE}
        - name: STAGING_API
          value: {{ .Values.uploadScheme}}://{{ .Values.upload }}
        - name: INGEST_API_KEY
          valueFrom:
            secretKeyRef:
              key: staging-api-key
              name: api-keys
        - name: INGEST_API_JWT_AUDIENCE
          value: {{ .Values.svcAuthAudience }}
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: "/etc/secrets/ingest-svc-account.json"
        image: {{ .Values.image }}
        imagePullPolicy: Always
        name: ingest-staging-manager
        volumeMounts:
          - name: secret-volume
            mountPath: "/etc/secrets"
            readOnly: true
        resources:
          limits:
            memory: 40Mi
          requests:
            memory: 30Mi
